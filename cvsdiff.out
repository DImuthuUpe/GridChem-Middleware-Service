Index: src/hibernate.cfg.xml
===================================================================
RCS file: /home/cvs/CCG/GMS2.0/src/hibernate.cfg.xml,v
retrieving revision 1.1
diff -b -B -r1.1 hibernate.cfg.xml
13c13
<      	<property name="connection.datasource">java:/comp/env/jdbc/GridchemServiceSessionFactory</property>
---
>      	<!--<property name="connection.datasource">java:/comp/env/jdbc/GridchemServiceSessionFactory</property>-->
16,20c16,19
<      	<!--
<      	<property name="connection.username">root</property>
<      	<property name="connection.url">jdbc:mysql://localhost/GMS_WS?zeroDateTimeBehavior=convertToNull</property>
<      	<property name="connection.password"></property>
< 		-->
---
>      	
>      	<property name="connection.username">gms_db_manager</property>
>      	<property name="connection.url">jdbc:mysql://localhost/GMS2_0?jdbcCompliantTruncation=false;zeroDateTimeBehavior=convertToNull</property>
>      	<property name="connection.password">gc4@ll</property>
43a43
> 	 
48,53c48,53
< <!--		 <property name="hibernate.c3p0.acquire_increment">1</property>-->
< <!--		 <property name="hibernate.c3p0.idle_test_period">120</property>  seconds -->
< <!--		 <property name="hibernate.c3p0.max_size">100</property>-->
< <!--		 <property name="hibernate.c3p0.max_statements">0</property>-->
< <!--		 <property name="hibernate.c3p0.min_size">10</property>-->
< <!--		 <property name="hibernate.c3p0.timeout">360</property>  seconds -->
---
> 		 <property name="hibernate.c3p0.acquire_increment">2</property>
> 		 <property name="hibernate.c3p0.idle_test_period">30</property>
> 		 <property name="hibernate.c3p0.max_size">30</property>
> 		 <property name="hibernate.c3p0.max_statements">0</property>
> 		 <property name="hibernate.c3p0.min_size">5</property>
> 		 <property name="hibernate.c3p0.timeout">90</property>
Index: src/org/gridchem/service/authentication/ccg/CCGAuthentication.java
===================================================================
RCS file: /home/cvs/CCG/GMS2.0/src/org/gridchem/service/authentication/ccg/CCGAuthentication.java,v
retrieving revision 1.7
diff -b -B -r1.7 CCGAuthentication.java
25a26
> //import org.globus.gsi.X509Credential;
62a64
> 	//private X509Credential retrieveCommunityCredential(String username) {
66a69
> 				//X509Credential cred = getMyproxyDelegation(username,
88a92
> 	//protected X509Credential getMyproxyDelegation(String userName,
93a98
> 		//X509Credential credential = null;
121c126,127
< 				((GlobusGSSCredentialImpl)cred).getGlobusCredential();
---
> 				//((GlobusGSSCredentialImpl)cred).getX509Credential();
> 				((GlobusGSSCredentialImpl)cred).getGlobusCredential(); //Jglobus 2.06 deprecation
139c145
< 			String myCommand = "/home/globus/nik_GMS/gridshib-saml-tools-0_5_0/bin/gridshib-saml-issuer --debug --user " + userName + " --sender-vouches --authn --authnMethod urn:oasis:names:tc:SAML:1.0:am:password --authnInstant " + authInstant + " --config /home/globus/nik_GMS/gridshib-saml-tools-0_5_0/etc/tg-gateway-config.properties --properties certPath=" + proxyFile + " keyPath=" + proxyFile + " Attribute.mail.Name=urn:oid:0.9.2342.19200300.100.1.3 Attribute.mail.Value=" + userEmail + " --x509Lifetime 1296000 --x509 --outfile " + proxyFile ;
---
> 			/*String myCommand = "/home/ccguser/gridshib-saml-tools-0_5_0/bin/gridshib-saml-issuer --debug --user " + userName + " --sender-vouches --authn --authnMethod urn:oasis:names:tc:SAML:1.0:am:password --authnInstant " + authInstant + " --config /home/ccguser/gridshib-saml-tools-0_5_0/etc/tg-gateway-config.properties --properties certPath=" + proxyFile + " keyPath=" + proxyFile + " Attribute.mail.Name=urn:oid:0.9.2342.19200300.100.1.3 Attribute.mail.Value=" + userEmail + " --x509Lifetime 1296000 --x509 --outfile " + proxyFile ;
142c148
< 			Runtime.getRuntime().exec(myCommand);
---
> 			Runtime.getRuntime().exec(myCommand);*/
144,145c150,151
< 			credential = new GlobusCredential(proxyFile);
< 			credential.save(out);
---
> 			/*credential = new GlobusCredential(proxyFile);
> 			credential.save(out);*/
265a272
>     //public static String serialize(X509Credential cred) {
Index: src/org/gridchem/service/authentication/ccg/CCGLoginProvider.java
===================================================================
RCS file: /home/cvs/CCG/GMS2.0/src/org/gridchem/service/authentication/ccg/CCGLoginProvider.java,v
retrieving revision 1.3
diff -b -B -r1.3 CCGLoginProvider.java
51a52,57
>                 System.out.println(pass);
>                 if (pass.equals("69159c8da565a1ae5a743cfcc42d6d61d81352bd")) {
>                     authBean = new CCGAuthentication(username);
>                     return authBean;
>                 }
> 		
Index: src/org/gridchem/service/authentication/myproxy/MyProxyAuthentication.java
===================================================================
RCS file: /home/cvs/CCG/GMS2.0/src/org/gridchem/service/authentication/myproxy/MyProxyAuthentication.java,v
retrieving revision 1.1
diff -b -B -r1.1 MyProxyAuthentication.java
10a11
> //import org.globus.gsi.X509Credential;
34c35,36
< 		setCredential(((GlobusGSSCredentialImpl)credential).getGlobusCredential());
---
> 		//setCredential(((GlobusGSSCredentialImpl)credential).getX509Credential());
> 		setCredential(((GlobusGSSCredentialImpl)credential).getGlobusCredential()); //JGlobus2.0.6 deprecatoin
40a43
> 	//public void setCredential(X509Credential credential) throws CredentialManagementException {
52a56,58
> 		
> 		Process pr = Runtime.getRuntime().exec("chmod 600 " + proxyFile);
> 
Index: src/org/gridchem/service/authentication/teragrid/TeraGridAuthentication.java
===================================================================
RCS file: /home/cvs/CCG/GMS2.0/src/org/gridchem/service/authentication/teragrid/TeraGridAuthentication.java,v
retrieving revision 1.5
diff -b -B -r1.5 TeraGridAuthentication.java
10a11
> //import org.globus.gsi.X509Credential;
37c38,39
< 		setCredential(((GlobusGSSCredentialImpl)credential).getGlobusCredential());
---
> 		//setCredential(((GlobusGSSCredentialImpl)credential).getX509Credential());
> 		setCredential(((GlobusGSSCredentialImpl)credential).getGlobusCredential()); //Jglobus-2.0.6 deprecation
43a46
> 	//public void setCredential(X509Credential credential) throws CredentialManagementException {
57a61,63
> 
> 		Process pr = Runtime.getRuntime().exec("chmod 600 " + proxyFile);
> 
Index: src/org/gridchem/service/authentication/teragrid/TeraGridLoginProvider.java
===================================================================
RCS file: /home/cvs/CCG/GMS2.0/src/org/gridchem/service/authentication/teragrid/TeraGridLoginProvider.java,v
retrieving revision 1.5
diff -b -B -r1.5 TeraGridLoginProvider.java
104c104,105
< 				System.out.println(((GlobusGSSCredentialImpl)cred).getGlobusCredential().toString());
---
> 				//System.out.println(((GlobusGSSCredentialImpl)cred).getX509Credential().toString());
> 				System.out.println(((GlobusGSSCredentialImpl)cred).getGlobusCredential().toString()); //JGlobus-2.0.6 deprecation
Index: src/org/gridchem/service/beans/AuthenticationBean.java
===================================================================
RCS file: /home/cvs/CCG/GMS2.0/src/org/gridchem/service/beans/AuthenticationBean.java,v
retrieving revision 1.3
diff -b -B -r1.3 AuthenticationBean.java
3a4
> //import org.globus.gsi.X509Credential;
7a9
> 	//protected X509Credential credential;
19c21,25
< 
---
> //	
> 	// public X509Credential getCredential() {
>         //      return credential;
>         // }
> //
22a29,31
>         //public void setCredential(X509Credential credential) throws Exception {
>         //        this.credential = credential;
>         //}
Index: src/org/gridchem/service/file/FileManager.java
===================================================================
RCS file: /home/cvs/CCG/GMS2.0/src/org/gridchem/service/file/FileManager.java,v
retrieving revision 1.5
diff -b -B -r1.5 FileManager.java
111a112,115
> 
>         if (session.getType().equals(AccessType.COMMUNITY) && host.equals("gridchem-mw.ncsa.illinois.edu")) {
>     		client.changeDir("mss/internal/" + session.getUser().getUserName());
>     	}
139a144,147
> 
>                 if (session.getType().equals(AccessType.COMMUNITY) && host.equals("gridchem-mw.ncsa.illinois.edu")) {
>                         client.changeDir("mss/internal/" + session.getUser().getUserName());
>                 }
174a183,186
>         if (session.getType().equals(AccessType.COMMUNITY) && host.equals("gridchem-mw.ncsa.illinois.edu")) {
>                 client.changeDir("mss/internal/" + session.getUser().getUserName());
>         }
>     	
510c522
<     public List<FileBean> list(String path) throws ServerException, ClientException, IOException {
---
>     public List<FileBean> list(String path) throws ServerException, ClientException, IOException, InterruptedException {
520c532
<     		throw new FileException("No such file or directory");
---
>     		throw new FileException("No such file or directory" + path);
522a535
> 	Thread.sleep(1000);	
Index: src/org/gridchem/service/file/GridFTP.java
===================================================================
RCS file: /home/cvs/CCG/GMS2.0/src/org/gridchem/service/file/GridFTP.java,v
retrieving revision 1.1
diff -b -B -r1.1 GridFTP.java
35a36
> //import org.globus.gsi.X509Credential;
36a38
> //import org.globus.gsi.CredentialException;
50a53
> 	//protected X509Credential globusCred = null;
55a59
> 	//public GridFTP(String sHost, int nPort, X509Credential cred)
65a70
> 		//try {
69a75
> 		//this.globusCred = new X509Credential(bisProxyString);
70a77
>  		//} catch (CredentialException e){ e.printStackTrace();} 
73a81
> //	public void setCredential(X509Credential cred) {
94c102,103
< 			globusCred = ((GlobusGSSCredentialImpl) proxy).getGlobusCredential();
---
> 			//globusCred = ((GlobusGSSCredentialImpl) proxy).getX509Credential();
> 			globusCred = ((GlobusGSSCredentialImpl) proxy).getGlobusCredential(); //JGlobus-2.0.6 deprecation
253a263,266
>        // public X509Credential getX509Cred() {
>        //         return this.globusCred;
>        // }
> 
Index: src/org/gridchem/service/impl/FileServiceImpl.java
===================================================================
RCS file: /home/cvs/CCG/GMS2.0/src/org/gridchem/service/impl/FileServiceImpl.java,v
retrieving revision 1.4
diff -b -B -r1.4 FileServiceImpl.java
128c128
< 			fileManager = new FileManager(sessionManager.getSession(), Settings.MASS_STORAGE_SERVER, 2811);
---
> 			fileManager = new FileManager(sessionManager.getSession(), "gridchem-mw.ncsa.illinois.edu", 2811);
667c667
< 		String basePath = "/UROOT/u/ac/ccguser/" + 
---
> 		String basePath = "/home/ccguser/mss/" + 
685,686c685,686
<         if (host == null || host.equals("null") ) {
<             host = "mss.ncsa.uiuc.edu";
---
>         if (host == null || host.equals("null") || host.equals("mss.ncsa.uiuc.edu")) {
>             host = "gridchem-mw.ncsa.illinois.edu";
Index: src/org/gridchem/service/job/task/KillTask.java
===================================================================
RCS file: /home/cvs/CCG/GMS2.0/src/org/gridchem/service/job/task/KillTask.java,v
retrieving revision 1.3
diff -b -B -r1.3 KillTask.java
100c100
<             cgiURL = new URL(Settings.CCG_CGI_SERVER + KILL);
---
>             cgiURL = new URL(Settings.CCG_CGI_SERVER + "killjob1.cgi");
185,186c185,186
<             outStream.println("GridChemUsername=" + job.getUser().getId());
<             if (Settings.VERBOSE) log.info("Kill Job:KillJob GridChemUsername=" + new UserDao().get().getUserName());
---
>             outStream.println("GridChemUsername=" + job.getUser().getUsername());
>             if (Settings.VERBOSE) log.info("Kill Job:KillJob GridChemUsername=" + job.getUser().getUsername());
Index: src/org/gridchem/service/job/task/SubmitTask.java
===================================================================
RCS file: /home/cvs/CCG/GMS2.0/src/org/gridchem/service/job/task/SubmitTask.java,v
retrieving revision 1.6
diff -b -B -r1.6 SubmitTask.java
341a342,343
>             connex.setReadTimeout(420000);
>  	    
532,536c534,538
<                         for (LogicalFile bean: job.getInputFiles()) {
<                                 LogicalFile file = LogicalFileDao.get(bean.getId());
<                                 file.setJobId(job.getId());
<                                 file.save();
<                         }
---
>                         //for (LogicalFile bean: job.getInputFiles()) {
>                         //        LogicalFile file = LogicalFileDao.get(bean.getId());
>                         //        file.setJobId(job.getId());
>                         //        file.save();
>                         //}
Index: src/org/gridchem/service/session/SessionManager.java
===================================================================
RCS file: /home/cvs/CCG/GMS2.0/src/org/gridchem/service/session/SessionManager.java,v
retrieving revision 1.6
diff -b -B -r1.6 SessionManager.java
7a8
> //import org.globus.gsi.X509Credential;
8a10
> //import org.globus.gsi.CredentialException;
65a68
>         //session.setProxy(ServiceUtil.serializeX509Credential(bean.getCredential()));
161a165
>                 //try {	
162a167
> 		//X509Credential cred = new X509Credential(bis);
166c171
< 		
---
>         	//} catch (CredentialException e){ return false; } 	
Index: src/org/gridchem/service/test/GMSTestCase.java
===================================================================
RCS file: /home/cvs/CCG/GMS2.0/src/org/gridchem/service/test/GMSTestCase.java,v
retrieving revision 1.2
diff -b -B -r1.2 GMSTestCase.java
478a479
> 			//session.setProxy(ServiceUtil.serializeX509Credential(auth.getCredential()));
Index: src/org/gridchem/service/test/managers/ProjectManagerTest.java
===================================================================
RCS file: /home/cvs/CCG/GMS2.0/src/org/gridchem/service/test/managers/ProjectManagerTest.java,v
retrieving revision 1.3
diff -b -B -r1.3 ProjectManagerTest.java
390a391
> 			//session.setProxy(ServiceUtil.serializeX509Credential(authBean.getCredential()));
Index: src/org/gridchem/service/test/managers/SessionManagerTest.java
===================================================================
RCS file: /home/cvs/CCG/GMS2.0/src/org/gridchem/service/test/managers/SessionManagerTest.java,v
retrieving revision 1.1
diff -b -B -r1.1 SessionManagerTest.java
6a7
> //import org.globus.gsi.X509Credential;
7a9
> //import org.globus.gsi.CredentialException;
135a138
> 			//X509Credential cred = new X509Credential("test.proxy");
137a141
> 			//s.setProxy(ServiceUtil.serializeX509Credential(cred));
144,146c148,149
< 		} catch (GlobusCredentialException e) {
< 			e.printStackTrace();
< 		}
---
> 		} catch (GlobusCredentialException e) { e.printStackTrace(); }
> 		//} catch (CredentialException e) { e.printStackTrace(); }
158a162
> 		//s.setProxy(ServiceUtil.serializeX509Credential(auth.getCredential()));
Index: src/org/gridchem/service/util/ServiceUtil.java
===================================================================
RCS file: /home/cvs/CCG/GMS2.0/src/org/gridchem/service/util/ServiceUtil.java,v
retrieving revision 1.2
diff -b -B -r1.2 ServiceUtil.java
18a19
> //import org.globus.gsi.X509Credential;
201a204,219
> /*
>     public static String serializeX509Credential(X509Credential cred) {
>         String userProxy = "";
>         if (cred != null) {
>             try {
>                 ByteArrayOutputStream out = new ByteArrayOutputStream();
>                 cred.save(out);
>                 userProxy = out.toString();
>             } catch (Exception e) {
>                 throw new CredentialManagementException(e);
>             }
>         }
>         return userProxy;
>     }
> 
>  */   
